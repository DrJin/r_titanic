1+1
getwd()
#2. 데이터 입수
# [0] csv 확인
# [] 데이터 불러와 저장하기
read.csv('titanic.csv')
#2. 데이터 입수
# [0] csv 확인
# [] 데이터 불러와 저장하기
data = read.csv('titanic.csv')
#2. 데이터 입수
# [0] csv 확인
# [] 데이터 불러와 저장하기
read.csv('titanic.csv',
sep = ',', #separator
header = T,#칼럼형 존재 여부
stringsAsFactors = F) #문자형 데이터 인식 형태
#2. 데이터 입수
# [0] csv 확인
# [] 데이터 불러와 저장하기
raw <- read.csv('titanic.csv',
sep = ',', #separator
header = T,#칼럼형 존재 여부
stringsAsFactors = F) #문자형 데이터 인식 형태
raw_backup <= raw
raw_backup <- raw #backup
str(raw)
#[]데이터 확인
head(raw, 20)
#[]데이터 확인
head(raw, 2)
#[]데이터 확인
summary(raw)
colnames(raw)[1] <- 'id'
summary(raw)
#변수별 데이터 확인 ####
summary(raw$Survived)
summary(raw$Survived)
summary(raw1$Survived)
str(raw1$Survived)
str(raw1$Survived)
# - 데이터 유형 변경 ####
raw1 <- raw #백업
str(raw1$Survived)
str(raw1$Survived)
str(raw1$Survived)
as.factor(raw1$Survived) #R에서 범주형 데이터를 나타내는 유형
summary(raw1$Survived)
#변수별 데이터 확인 ####
summary(raw$Survived)
summary(raw$Pclass)
summary(raw$Sex)
summary(raw$Age) # NA : 263
summary(raw$Sibsp)
summary(raw$Parch)
summary(raw$Ticket)
summary(raw$Fare)
summary(raw$cabin)
summary(raw$Embarked)
summary(raw1$Survived)
raw1$Survived <= as.factor(raw1$Survived)
summary(raw1$Survived)
raw1$Survived <- as.factor(raw1$Survived)
summary(raw1$Survived)
raw1$Survived <- as.factor(raw1$Survived)
raw1$Pclass <- as.factor(raw1$Pclass)
raw1$Sex <- as.factor(raw1$Sex)
raw1$Embaked <- as.factor(raw1$Embarked)
summary(raw1$Embarked)
# [] 이상치, 결측치 확인 1 ####
is.na(raw1)
# [] 이상치, 결측치 확인 1 ####
#is.na(raw1)
#결측치 유형 - Null, NA, NaN, 공백('', '  '), -1, 99
for (i in 1:ncol(raw1)){
sum(is.na(i))
}
sum(is.na(i))
# [] 이상치, 결측치 확인 1 ####
#is.na(raw1)
#결측치 유형 - Null, NA, NaN, 공백('', '  '), -1, 99
for (i in 1:ncol(raw1)){
sum(is.na(i))
}
for (i in 1:ncol(raw1)){
sum(is.na(i))
}
sum(is.na(i))
sum(is.na(i))
sum(is.na(i))
raw1$Cabin == ''
raw1[raw1$Cabin == '',]
raw1$Cabin == '' #결측치 ''
raw1[raw1$Cabin == '',]
nrow(raw1[raw1$Cabin == '',])
raw1$Embarked == '' #결측치 ''
raw1[raw1$Embarked == '',]
nrow(raw1[raw1$Embarked == '',])
nrow(raw1[raw1$Cabin == '',])
mean(raw1$Age)
summary(raw1$Age)
mean(raw1$Age) #평균 -> NA
mean(raw1$Age, na.rm = T) # 결측치 값은 지우고 평균
which(is.na(raw1$Age))
raw1[which(is.na(raw1$Age)),]$Age <- age_mean
age_mean <- mean(raw1$Age, na.rm = T)
raw1[which(is.na(raw1$Age)),]$Age <- age_mean
summary(raw1$Age)
mean(raw1$Age) #평균 -> NA
mean(raw$Age, na.rm = T) # 결측치 값은 지우고 평균
save.image("C:/Users/JinSH/Desktop/승현이글/프로그래밍/R 프로그래밍/캐치 데이터븐석 시리즈/titanic/titanic.1.RData")
raw2$SibSp
raw2 <- raw1
raw2$SibSp
raw2$Parch
raw2$SibSp + raw2$Parch
raw2$Family <- raw2$SibSp + raw2$Parch
summary(raw2)
library(ggplot)
library('ggplot')
install.packages('ggplot2')
library(ggplot2)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
library(ggplot)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
library(ggplot2)
library(ggplot2)
install.packages('ggplot2')
ggplot(raw2, aes(x=Family)) + geom_histogram()
ggplot(raw2, aes(x=Family, fill= Survived)) + geom_histogram(binwidth = 1)
ggplot(raw2, aes(x=Family, fill= Survived)) + geom_histogram(binwidth = 1, position = 'fill')
dataset <- raw # 백업2
dataset <- raw2[,c('Survived','Pclass','Sex','Age','Family','Fare','Embarked') ]
summary(dataset)
# [] 데이터셋 분할 ####
idx <- seq(1:1309)
# [] 데이터셋 분할 ####
idx <- seq(1:1309)
train_idx <- sample(idx, #샘플링 대산 데이터
size = length(idx)*0.7, #70% 학습
replace = F) #비복원추출
test_idx <= idx[-train_idx]
test_idx <- idx[-train_idx]
dataset_train <- dataset[train_idx, ]
dataset_test <- dataset[test_idx, ]
install.packages('caret')
library(caret)
library(caret)
library(caret)
# 정규화 ####
scale <- caret::preProcess(dataset_train, method = c('center','scale'))
library(caret)
# 정규화 ####
scale <- caret::preProcess(dataset_train, method = c('center','scale'))
dataset_train_scale <- predict(scale, dataset_train) # 정규화된 훈련용 데이터
dataset_test_scale <- predict(scale, dataset_test) # 정규화된 검증용 데이터
# 정규화 ####
scale <- caret::preProcess(dataset_train, method = c('center','scale'))
install.packages('ggplot2')
library(caret)
install.packages("Rcpp")
library(Rcpp)
install.packages('ggplot2')
library(ggplot2)
